

akka {
  //loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"

  actor {
    serialize-creators = on
    serialize-messages = on
    provider = "akka.remote.RemoteActorRefProvider"

  }

  name = "ManagerSystem"

  remote {
    netty.tcp {
      hostname = ""
      host = "0.0.0.0"
      port = 6000
    }

    retry-window = 5s
    gate-invalid-addresses-for = 5s
    quarantine-systems-for = off
    retry-gate-closed-for = 10s
  }
  persistence {
    journal.leveldb.dir = "target/journal"
    journal.leveldb.native = off //for test
    snapshot-store.local.dir = "target/snapshots"
  }
}

kafka {
  zk-address = "dtkhost:2181"
  brokers = "dtkhost:9092"
  start = last # /// first = reset and consume from first element | last = consume from last unconsumed
  topic = "feed"
  consumer-group = "feed-producer"
  consumer {
    auto.offset.reset = smallest
  }
}